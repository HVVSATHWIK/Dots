rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Users collection: users/{uid}
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || hasAdminRole());
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId;
      allow delete: if false; // Prevent direct deletion for safety
    }

    // Wishlist items: users/{uid}/wishlist/{itemId}
    match /users/{userId}/wishlist/{itemId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId;
      allow delete: if request.auth != null && request.auth.uid == userId;
    }

    // Listings collection: listings/{listingId}
    match /listings/{listingId} {
      allow read: if true; // Publicly readable listings
      allow create: if isArtisan();
      allow update: if isArtisan() && request.auth.uid == resource.data.ownerId;
      allow delete: if isArtisan() && request.auth.uid == resource.data.ownerId;
    }

    // Orders: orders/{orderId}
    match /orders/{orderId} {
      allow read: if request.auth != null && (request.auth.uid == resource.data.buyerId || request.auth.uid == resource.data.sellerId || hasAdminRole());
      allow create: if request.auth != null && request.auth.uid == request.resource.data.buyerId;
      allow update: if false; // Immutable after creation for now
      allow delete: if false;
    }

    // Products: products/{productId}
    // NOTE: Dashboard currently queries products by sellerId + orderBy(createdAt).
    // We allow public read (or tighten later) and restrict writes to the owning artisan.
    match /products/{productId} {
      allow read: if true; // Consider tightening to visibility/status if needed.
      allow create: if isArtisan() && request.auth.uid == request.resource.data.sellerId;
      allow update: if isArtisan() && request.auth.uid == resource.data.sellerId;
      allow delete: if isArtisan() && request.auth.uid == resource.data.sellerId;
    }

    function isArtisan() {
      return request.auth != null && (request.auth.token.role == 'artisan' || request.auth.token.role == 'admin');
    }

    function hasAdminRole() {
      return request.auth != null && request.auth.token.role == 'admin';
    }
  }
}
